<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="5"
                  Background="#74000000"
                  BorderBrush="#FF900000"
                  BorderThickness="1"
				  Cursor="Hand">
				<Border.Triggers>
					<EventTrigger RoutedEvent="MouseEnter">
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
												To="Red"
												Duration="00:00:00.1"/>
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger>
					<EventTrigger RoutedEvent="MouseLeave">
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
												To="#FF900000"
												Duration="00:00:00.1"/>
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger>
				</Border.Triggers>
			</Border>

			<Path 
                  x:Name="Arrow"
                  Grid.Column="1"  
                  Fill="White" 
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
				  Data="M 0 0 L 4 4 L 8 0 z">
			</Path>
		</Grid>
	</ControlTemplate>

	<Style x:Key="CB" TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="true"/>
		<Setter Property="MinWidth" Value="120"/>
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontFamily" Value="./Fonts/#Noto Sans JP"/>
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect ShadowDepth="0"
					Direction="0"
					Color="Black"
					Opacity="1"
					BlurRadius="20"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
						</ToggleButton>
						<ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
						<TextBlock x:Name="Placeholder"
							Foreground="DimGray"
							FontFamily="./Fonts/#Noto Sans JP"
							FontSize="20"
							Background="{TemplateBinding Background}"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True"
                            Visibility="Hidden"
							Text="Default"
							IsHitTestVisible="False"/>
						<TextBox x:Name="PART_EditableTextBox"
							Foreground="White"
							FontFamily="./Fonts/#Noto Sans JP"
							FontSize="20"
							FontWeight="SemiBold"
							Background="{TemplateBinding Background}"
							BorderThickness="0"
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True"
                            Visibility="Visible"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
							SelectionBrush="#FFFF9C9C"
						    CaretBrush="#FFFF9C9C"
							SelectionOpacity="0.3"
							ContextMenu="{DynamicResource TextBoxMenu}"/>
						<Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Fade">

							<Grid Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border 
                                x:Name="DropDownBorder"
                                Background="#B2000000"
                                BorderThickness=".5"
                                BorderBrush="#FF900000"/>
								<ScrollViewer Margin="4,5,4,6" SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True"
												KeyboardNavigation.DirectionalNavigation="Contained"/>
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="Red"/>
							<Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="Red"/>
							<Setter TargetName="Placeholder" Property="Foreground" Value="Red"/>
							<Setter TargetName="Placeholder" Property="Text" Value="Unavailable"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
						<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
							<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="5"/>
							<Setter TargetName="DropDownBorder" Property="Margin" Value="0,1,0,0"/>
						</Trigger>
						<Trigger Property="IsEditable"  Value="true">
							<Setter Property="IsTabStop" Value="false"/>
							<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
							<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsEditable"  Value="false">
							<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Hidden"/>
							<Setter TargetName="ContentSite" Property="Visibility" Value="Visible"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="true"/>
								<Condition SourceName="PART_EditableTextBox" Property="Text" Value=""/>
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter TargetName="Placeholder" Property="Visibility" Value="Visible"/>
							</MultiTrigger.Setters>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Middle -->
	<Style x:Key="DownloadType" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border Name="Border"
                            Padding="2"
							CornerRadius="4"
                            SnapsToDevicePixels="False"
							Background="Transparent">
						<ContentPresenter HorizontalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted" Value="true">
							<Setter TargetName="Border" Property="BorderBrush" Value="#FFE89595"/>
							<Setter TargetName="Border" Property="BorderThickness" Value=".5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Left -->
	<Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource DownloadType}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border x:Name="FormatDropDown"
							CornerRadius="4"
							BorderThickness="0.5"
                            SnapsToDevicePixels="True"
							Padding="2"
							Background="Transparent">
						<ContentPresenter>
							<ContentPresenter.Content>
								<Grid Background="Transparent">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="50"/>
										<ColumnDefinition Width="70"/>
										<ColumnDefinition Width="69"/> <!-- hehe -->
										<ColumnDefinition Width="35"/>
										<ColumnDefinition Width="45"/>
									</Grid.ColumnDefinitions>
									<TextBlock Margin="0,0,5,0" Grid.Column="0" Text="{Binding Id}"/>
									<TextBlock Grid.Column="1" Text="{Binding Format}"/>
									<TextBlock Grid.Column="2" Text="{Binding Resolution}"/>
									<TextBlock Grid.Column="3" Text="{Binding Size}"/>
									<TextBlock Grid.Column="4" Text="{Binding Bitrate}"/>
									<TextBlock Grid.Column="5" Text="{Binding Fps}"/>
								</Grid>
							</ContentPresenter.Content>
						</ContentPresenter>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted" Value="true">
							<Setter TargetName="FormatDropDown" Property="BorderBrush" Value="#FFE89595"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>